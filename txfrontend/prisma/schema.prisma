// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Service {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(100)
  prefix        String   @unique @db.VarChar(5)
  active        Boolean  @default(true)
  priority      Int      @default(1)
  estimatedTime Int      @default(10) @map("estimated_time") // en minutos
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  // Relaciones
  tickets Ticket[]

  @@map("services")
}

model Operator {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(100)
  email        String   @unique @db.VarChar(100)
  passwordHash String   @map("password_hash") @db.VarChar(255)
  position     String?  @db.VarChar(50)
  role         Role     @default(OPERATOR)
  active       Boolean  @default(true)
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relaciones
  tickets          Ticket[]
  attentionSessions AttentionSession[]

  @@map("operators")
}

model Ticket {
  id                 Int       @id @default(autoincrement())
  number             String    @db.VarChar(10)
  serviceId          Int       @map("service_id")
  status             Status    @default(WAITING)
  priority           Int       @default(1)
  createdAt          DateTime  @default(now()) @map("created_at")
  calledAt           DateTime? @map("called_at")
  startedAt          DateTime? @map("started_at")
  completedAt        DateTime? @map("completed_at")
  operatorId         Int?      @map("operator_id")
  estimatedWaitTime  Int?      @map("estimated_wait_time") // en minutos
  actualWaitTime     Int?      @map("actual_wait_time") // en minutos
  mobilePhone        String?   @map("mobile_phone") @db.VarChar(20)
  notificationSent   Boolean   @default(false) @map("notification_sent")

  // Relaciones
  service  Service   @relation(fields: [serviceId], references: [id])
  operator Operator? @relation(fields: [operatorId], references: [id])

  @@map("tickets")
}

model SystemSetting {
  id          Int      @id @default(autoincrement())
  key         String   @unique @db.VarChar(50)
  value       String   @db.Text
  description String?  @db.Text
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("system_settings")
}

model AttentionSession {
  id                   Int      @id @default(autoincrement())
  date                 DateTime @db.Date
  operatorId           Int      @map("operator_id")
  ticketsAttended      Int      @default(0) @map("tickets_attended")
  totalTimeMinutes     Int      @default(0) @map("total_time_minutes")
  averageTimeMinutes   Float    @default(0) @map("average_time_minutes")
  createdAt            DateTime @default(now()) @map("created_at")

  // Relaciones
  operator Operator @relation(fields: [operatorId], references: [id])

  @@map("attention_sessions")
}

model DailyMetric {
  id                     Int      @id @default(autoincrement())
  date                   DateTime @unique @db.Date
  totalTickets           Int      @default(0) @map("total_tickets")
  completedTickets       Int      @default(0) @map("completed_tickets")
  cancelledTickets       Int      @default(0) @map("cancelled_tickets")
  averageWaitTime        Float    @default(0) @map("average_wait_time")
  peakHour               Int?     @map("peak_hour") // hora pico (0-23)
  serviceLevelPercentage Float    @default(0) @map("service_level_percentage")
  createdAt              DateTime @default(now()) @map("created_at")

  @@map("daily_metrics")
}

// Enums
enum Role {
  OPERATOR
  SUPERVISOR
  ADMIN
}

enum Status {
  WAITING
  CALLED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
